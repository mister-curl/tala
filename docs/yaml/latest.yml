swagger: "2.0"
info:
  version: "1.0.0"
  title: "tala API"
host: "localhost"
basePath: "/tala/api/v1"
schemes:
  - http
paths:
  /nodes/{id}/status/:
    post:
      summary: "対象のノードの状態を変更します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "Node ID"
          required: true
          type: integer
        - name: "body"
          in: body
          schema:
            properties:
              status:
                type: string
                description: "変更後の状態"
                example: "INSTALLING"
                enum: ["INSTALLING", "READY"]
      responses:
        200:
          description: OK

  /nodes/{id}/power/:
    post:
      summary: "対象のノードの電源状態を変更します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "Node ID"
          required: true
          type: integer
        - name: "body"
          in: body
          schema:
            properties:
              status:
                type: string
                description: "変更後の電源状態"
                example: "ON"
                enum: ["ON", "OFF"]
      responses:
        200:
          description: OK

  /nodes/{id}/metrics/:
    get:
      summary: "対象のノードのメトリクス情報を取得します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "Node ID"
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              properties:
                metrics_type:
                  type: string
                  description: "メトリクスタイプ"
                value:
                  type: string
                  description: "値"
                date:
                  type: string
                  description: "値を取得した時間"
                unit:
                  type: string
                  description: "単位"

    post:
      summary: "対象のノードのメトリクス情報を保存します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "Node ID"
          required: true
          type: integer
        - name: "body"
          in: body
          schema:
            properties:
              metrics_type:
                type: string
                description: "メトリクスタイプ"
              value:
                type: string
                description: "値"
              date:
                type: string
                description: "値を取得した時間"
              unit:
                type: string
                description: "単位"
      responses:
        200:
          description: OK


  /nodes/{id}/metrics/{metrics_type}/:
    get:
      summary: "対象のノードのメトリクスごとのメトリクス情報を取得します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "Node ID"
          required: true
          type: integer
        - name: "metrics_type"
          in: "path"
          description: "Metrics Type"
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              properties:
                metrics_type:
                  type: string
                  description: "メトリクスタイプ"
                value:
                  type: string
                  description: "値"
                date:
                  type: string
                  description: "値を取得した時間"
                unit:
                  type: string
                  description: "単位"

  /users/:
    get:
      summary: "ユーザ一覧を取得します"
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: "User ID"
                  example: 1
                username:
                  type: string
                  description: "Username"
                  example: "Hans Schmidt"

  /users/{id}/:
    get:
      summary: "ユーザ詳細情報を取得します"
      description: ""
      parameters:
        - name: "id"
          in: "path"
          description: "User ID"
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            properties:
              id:
                type: integer
                description: "User ID"
                example: 1
              username:
                type: string
                description: "Username"
                example: "Hans Schmidt"
              ssh_public_key:
                type: string
                description: "SSH Public Key"